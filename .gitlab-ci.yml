image: python:3.6-slim

stages:
  - test
  - test_again
#  - build
  - deploy
  
variables:
  BOT_LATEST_IMAGE: $CI_REGISTRY_IMAGE/bot:latest

.cache: &cache
  cache:
    key: "$CI_BUILD_REF_NAME"
    paths:
      - venv/
      - .pip

.prepare_tests_dependencies: &tests_dependencies
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - mkdir -p .pip
    - pip --cache-dir=.pip install -r dev.requirements.txt
    - echo $CI_PROJECT_DIR

.set_private_key: &set_private_key
  before_script:
    - 'which ssh-agent || ( apt-get update && apt-get install -y openssh-client )'
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts

test:
  stage: test
  <<: *cache
  <<: *tests_dependencies
  script:
    - flake8 --exclude venv beatiful_python.py 

test cache:
  stage: test_again
  <<: *cache
  script:
    - source venv/bin/activate
    - flake8 --exclude venv beatiful_python.py

#build:
#  stage: build
#  image: docker:latest
#  services:
#    - docker:dind
#  script:
#    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
#
#    - docker build -f docker/bot.Dockerfile -t $BOT_LATEST_IMAGE .
#    - docker push $BOT_LATEST_IMAGE
#  environment: homolog
#  tags:
#    - docker

deploy_to_homologation:
  stage: deploy
  <<: *set_private_key
  services:
    - docker:dind
  script:
    - ssh root@$DEPLOY_SERVER_IP "docker login -u 'gitlab-ci-token' -p ${CI_JOB_TOKEN} ${CI_REGISTRY}; docker-compose -f docker-compose stop bot; docker-compose -f docker-compose.autodeploy.yml rm bot --force; docker pull $CI_REGISTRY_IMAGE/bot:latest; docker-compose -f docker-compose up -d bot"
  only:
    - aula_da_carla
  environment: homolog
  tags:
    - docker
